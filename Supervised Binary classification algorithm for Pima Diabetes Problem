#Diabetes classification solving
In [9]:
# view first few rows
import pandas as pd
url="c:/Users/CSS/pimaindian.txt"
cname=['preg','plas','pres','skin','test','mass','pedi','age','class']
data = pd.read_csv(url, names=cname)
data.head()
Out[9]:
preg	plas	pres	skin	test	mass	pedi	age	class
0	6	148	72	35	0	33.6	0.63	50	1
1	1	85	66	29	0	26.6	0.35	31	0
2	8	183	64	0	0	23.3	0.67	32	1
3	1	89	66	23	94	28.1	0.17	21	0
4	0	137	40	35	168	43.1	2.29	33	1
In [5]:
data.tail()
Out[5]:
preg	plas	pres	skin	test	mass	pedi	age	class
763	10	101	76	48	180	32.9	0.171	63	0
764	2	122	70	27	0	36.8	0.340	27	0
765	5	121	72	23	112	26.2	0.245	30	0
766	1	126	60	0	0	30.1	0.349	47	1
767	1	93	70	31	0	30.4	0.315	23	0
In [4]:
type(data)
Out[4]:
pandas.core.frame.DataFrame
In [6]:
#Dimensions of your data
shape = data.shape
print(shape)
(768, 9)
In [7]:
#types of data in each column.Suffix 64 is for alphanumeric datatype.
types = data.dtypes
print(types)
preg       int64
plas       int64
pres       int64
skin       int64
test       int64
mass     float64
pedi     float64
age        int64
class      int64
dtype: object
In [8]:
pd.set_option('precision',2)
data.describe()
Out[8]:
preg	plas	pres	skin	test	mass	pedi	age	class
count	768.00	768.00	768.00	768.00	768.00	768.00	768.00	768.00	768.00
mean	3.85	120.89	69.11	20.54	79.80	31.99	0.47	33.24	0.35
std	3.37	31.97	19.36	15.95	115.24	7.88	0.33	11.76	0.48
min	0.00	0.00	0.00	0.00	0.00	0.00	0.08	21.00	0.00
25%	1.00	99.00	62.00	0.00	0.00	27.30	0.24	24.00	0.00
50%	3.00	117.00	72.00	23.00	30.50	32.00	0.37	29.00	0.00
75%	6.00	140.25	80.00	32.00	127.25	36.60	0.63	41.00	1.00
max	17.00	199.00	122.00	99.00	846.00	67.10	2.42	81.00	1.00
In [10]:
class_counts = data.groupby('class').size()
print (class_counts)
class
0    500
1    268
dtype: int64
In [11]:
#pairwise pearson correlations
correlations = data.corr(method = 'pearson')
print(correlations)
       preg  plas  pres  skin  test  mass  pedi   age  class
preg   1.00  0.13  0.14 -0.08 -0.07  0.02 -0.03  0.54   0.22
plas   0.13  1.00  0.15  0.06  0.33  0.22  0.14  0.26   0.47
pres   0.14  0.15  1.00  0.21  0.09  0.28  0.04  0.24   0.07
skin  -0.08  0.06  0.21  1.00  0.44  0.39  0.18 -0.11   0.07
test  -0.07  0.33  0.09  0.44  1.00  0.20  0.19 -0.04   0.13
mass   0.02  0.22  0.28  0.39  0.20  1.00  0.14  0.04   0.29
pedi  -0.03  0.14  0.04  0.18  0.19  0.14  1.00  0.03   0.17
age    0.54  0.26  0.24 -0.11 -0.04  0.04  0.03  1.00   0.24
class  0.22  0.47  0.07  0.07  0.13  0.29  0.17  0.24   1.00
In [13]:
skew=data.skew()
print(skew)
preg     0.90
plas     0.17
pres    -1.84
skin     0.11
test     2.27
mass    -0.43
pedi     1.92
age      1.13
class    0.64
dtype: float64
In [14]:
kurt=data.kurt()
print(kurt)
preg     0.16
plas     0.64
pres     5.18
skin    -0.52
test     7.21
mass     3.29
pedi     5.59
age      0.64
class   -1.60
dtype: float64
In [15]:
x=data.abs()
print(x)
     preg   plas  pres  skin   test  mass  pedi   age  class
0     6.0  148.0  72.0  35.0    0.0  33.6  0.63  50.0    1.0
1     1.0   85.0  66.0  29.0    0.0  26.6  0.35  31.0    0.0
2     8.0  183.0  64.0   0.0    0.0  23.3  0.67  32.0    1.0
3     1.0   89.0  66.0  23.0   94.0  28.1  0.17  21.0    0.0
4     0.0  137.0  40.0  35.0  168.0  43.1  2.29  33.0    1.0
5     5.0  116.0  74.0   0.0    0.0  25.6  0.20  30.0    0.0
6     3.0   78.0  50.0  32.0   88.0  31.0  0.25  26.0    1.0
7    10.0  115.0   0.0   0.0    0.0  35.3  0.13  29.0    0.0
8     2.0  197.0  70.0  45.0  543.0  30.5  0.16  53.0    1.0
9     8.0  125.0  96.0   0.0    0.0   0.0  0.23  54.0    1.0
10    4.0  110.0  92.0   0.0    0.0  37.6  0.19  30.0    0.0
11   10.0  168.0  74.0   0.0    0.0  38.0  0.54  34.0    1.0
12   10.0  139.0  80.0   0.0    0.0  27.1  1.44  57.0    0.0
13    1.0  189.0  60.0  23.0  846.0  30.1  0.40  59.0    1.0
14    5.0  166.0  72.0  19.0  175.0  25.8  0.59  51.0    1.0
15    7.0  100.0   0.0   0.0    0.0  30.0  0.48  32.0    1.0
16    0.0  118.0  84.0  47.0  230.0  45.8  0.55  31.0    1.0
17    7.0  107.0  74.0   0.0    0.0  29.6  0.25  31.0    1.0
18    1.0  103.0  30.0  38.0   83.0  43.3  0.18  33.0    0.0
19    1.0  115.0  70.0  30.0   96.0  34.6  0.53  32.0    1.0
20    3.0  126.0  88.0  41.0  235.0  39.3  0.70  27.0    0.0
21    8.0   99.0  84.0   0.0    0.0  35.4  0.39  50.0    0.0
22    7.0  196.0  90.0   0.0    0.0  39.8  0.45  41.0    1.0
23    9.0  119.0  80.0  35.0    0.0  29.0  0.26  29.0    1.0
24   11.0  143.0  94.0  33.0  146.0  36.6  0.25  51.0    1.0
25   10.0  125.0  70.0  26.0  115.0  31.1  0.20  41.0    1.0
26    7.0  147.0  76.0   0.0    0.0  39.4  0.26  43.0    1.0
27    1.0   97.0  66.0  15.0  140.0  23.2  0.49  22.0    0.0
28   13.0  145.0  82.0  19.0  110.0  22.2  0.24  57.0    0.0
29    5.0  117.0  92.0   0.0    0.0  34.1  0.34  38.0    0.0
..    ...    ...   ...   ...    ...   ...   ...   ...    ...
738   2.0   99.0  60.0  17.0  160.0  36.6  0.45  21.0    0.0
739   1.0  102.0  74.0   0.0    0.0  39.5  0.29  42.0    1.0
740  11.0  120.0  80.0  37.0  150.0  42.3  0.79  48.0    1.0
741   3.0  102.0  44.0  20.0   94.0  30.8  0.40  26.0    0.0
742   1.0  109.0  58.0  18.0  116.0  28.5  0.22  22.0    0.0
743   9.0  140.0  94.0   0.0    0.0  32.7  0.73  45.0    1.0
744  13.0  153.0  88.0  37.0  140.0  40.6  1.17  39.0    0.0
745  12.0  100.0  84.0  33.0  105.0  30.0  0.49  46.0    0.0
746   1.0  147.0  94.0  41.0    0.0  49.3  0.36  27.0    1.0
747   1.0   81.0  74.0  41.0   57.0  46.3  1.10  32.0    0.0
748   3.0  187.0  70.0  22.0  200.0  36.4  0.41  36.0    1.0
749   6.0  162.0  62.0   0.0    0.0  24.3  0.18  50.0    1.0
750   4.0  136.0  70.0   0.0    0.0  31.2  1.18  22.0    1.0
751   1.0  121.0  78.0  39.0   74.0  39.0  0.26  28.0    0.0
752   3.0  108.0  62.0  24.0    0.0  26.0  0.22  25.0    0.0
753   0.0  181.0  88.0  44.0  510.0  43.3  0.22  26.0    1.0
754   8.0  154.0  78.0  32.0    0.0  32.4  0.44  45.0    1.0
755   1.0  128.0  88.0  39.0  110.0  36.5  1.06  37.0    1.0
756   7.0  137.0  90.0  41.0    0.0  32.0  0.39  39.0    0.0
757   0.0  123.0  72.0   0.0    0.0  36.3  0.26  52.0    1.0
758   1.0  106.0  76.0   0.0    0.0  37.5  0.20  26.0    0.0
759   6.0  190.0  92.0   0.0    0.0  35.5  0.28  66.0    1.0
760   2.0   88.0  58.0  26.0   16.0  28.4  0.77  22.0    0.0
761   9.0  170.0  74.0  31.0    0.0  44.0  0.40  43.0    1.0
762   9.0   89.0  62.0   0.0    0.0  22.5  0.14  33.0    0.0
763  10.0  101.0  76.0  48.0  180.0  32.9  0.17  63.0    0.0
764   2.0  122.0  70.0  27.0    0.0  36.8  0.34  27.0    0.0
765   5.0  121.0  72.0  23.0  112.0  26.2  0.24  30.0    0.0
766   1.0  126.0  60.0   0.0    0.0  30.1  0.35  47.0    1.0
767   1.0   93.0  70.0  31.0    0.0  30.4  0.32  23.0    0.0

[768 rows x 9 columns]
